Ngrok:

DJANGO BACKEND API: https://auth.dagbok.pro/app2
NEXT FRONTEND: https://auth.dagbok.pro/app1

Yeah, I have these two addresses that are accessible outside my machine,

so I can implement social login.

I tried to set up social login here, but it didn’t work.

It was very frustrating.

And then I thought, geez, could Next already have a solution that I can integrate into my project

to handle social login?

Also, thinking that Jungle is the back-end,

and even a basic table structure with the user’s essential information,

it doesn’t need to be complicated.

It doesn’t need to understand the address, it doesn’t need to have anything for now.

Actually, address, phone number, full name—first and last name will suffice.

We can use SQLite, just like in the beginning, very simple, nothing fancy.

Yeah, I want to enter the application, and if I’m not logged in,

I’m redirected to the login screen.

Then I wondered, instead of trying to do it manually,

like you’ll see in the code there, right, you’re looking at the code,

if I don’t grab something ready-made, because I don’t want to waste time on this.

The project’s goal isn’t to build social login from scratch.

I want to use a pre-built social login solution.

I think Ngrok, in its paid version,

might already have some...

some kind of social login feature.

I want to grab something ready-made and adapt the layout to fit my project’s design.

And I’m adding this header mainly for that purpose.

As time goes by, I’ll adjust the header

according to the needs I have at the moment.

I need this.

I’m getting discouraged because the more time I spend

on things that aren’t the project’s main goal,

the further I get from the objective I want to achieve with the project.

And I’m having a lot of trouble figuring out

how to integrate social login.

Then I can think about logging in with Google,

any type of social login would work for me.

And that way, I could have a range of options,

because I don’t want manual login,

I don’t want manual registration.

I’ll only accept social login.

-----------------------------------PROJECT TREE USING tree -L 2 /home/adriano/dev/agiliza/dagbokNgrok:-----------------------------
/home/adriano/dev/agiliza/dagbok
.
├── backend
│   ├── api
│   ├── backend-dev-template-1741861165.json
│   ├── dagbok
│   ├── db.sqlite3
│   ├── files
│   ├── manage.py
│   ├── requirements.txt
│   ├── venv
│   └── zappa_logs
├── frontend
│   ├── eslint.config.mjs
│   ├── html2pdf.d.ts
│   ├── next.config.ts
│   ├── next-env.d.ts
│   ├── node_modules
│   ├── out
│   ├── package.json
│   ├── package-lock.json
│   ├── postcss.config.mjs
│   ├── public
│   ├── server.js
│   ├── src
│   ├── tailwind.config.js
│   └── tsconfig.json
├── logs
│   └── conteudo_arquivos_relevantes.txt
├── node_modules
│   ├── asynckit
│   ├── axios
│   ├── call-bind-apply-helpers
│   ├── combined-stream
│   ├── delayed-stream
│   ├── dunder-proto
│   ├── es-define-property
│   ├── es-errors
│   ├── es-object-atoms
│   ├── es-set-tostringtag
│   ├── follow-redirects
│   ├── form-data
│   ├── function-bind
│   ├── get-intrinsic
│   ├── get-proto
│   ├── gopd
│   ├── hasown
│   ├── has-symbols
│   ├── has-tostringtag
│   ├── math-intrinsics
│   ├── mime-db
│   ├── mime-types
│   └── proxy-from-env
├── README.md
└── utils
    ├── estrutura.py
    ├── header.txt
    └── include_files.txt


----------------------------------CÓDIGO DO DABGOK APENAS COM OS AQUIVOS MAIS RELEVANTES-------------------------------------------